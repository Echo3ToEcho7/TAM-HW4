{"ts":1343151187682,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":true,"ts":1343226454729,"patch":[[{"diffs":[[1,"var URI = require('URIjs');\nvar Future = require(\"future\");\nvar restler = require('restler');\n\nvar Types = {\n\tHIERARCHICAL_REQUIREMENT: \"HierarchicalRequirement\",\n\tSTORY: \"HierarchicalRequirement\",\n\tTASK: \"Task\",\n\tDEFECT: \"Defect\",\n\tUSER: \"User\",\n\tUSERS: \"Users\"\n};\n\nvar RallyConnection = function RallyConnection(opts) {\n\tthis.opts = {};\n\tthis.opts.username = opts.username || \"\";\n\tthis.opts.password = opts.password || \"\";\n\tthis.opts.server = opts.server || \"rally1.rallydev.com\";\n\tthis.opts.version = opts.version || \"1.36\";\n};\n\nRallyConnection.prototype._generateQueryURL = function _generateQueryURL(type, query) {\n\treturn (new URI(\"\"))\n\t\t.protocol(\"https\")\n\t\t.hostname(this.opts.server)\n\t\t.path(\"/slm/webservice/\" + this.opts.version + \"/\" + type + \".js\")\n\t\t.query(query);\n};\n\nRallyConnection.prototype._generateRefURL = function _generateRefURL(type, oid) {\n\treturn (new URI(\"\"))\n\t\t.protocol(\"https\")\n\t\t.hostname(this.opts.server)\n\t\t.path(\"/slm/webservice/\" + this.opts.version + \"/\" + type + \"/\" + oid + \".js\");\n};\n\nRallyConnection.prototype._generateURL = function _generateURL(opts) {\n\tif (opts.hasOwnProperty(\"query\")) {\n\t\treturn this._generateQueryURL(opts.type, opts.query) + \"\";\n\t} else {\n\t\treturn this._generateRefURL(opts.type, opts.oid) + \"\";\n\t}\n};\n\nRallyConnection.prototype.connect = function connect() {\n\tvar future = Future.create(this);\n\tvar uri = this._generateURL({type: Types.USER, query: {fetch: \"Username\"}});\n\n\trestler.get(\n\t\turi, \n\t\t{ username: this.opts.username, password: this.opts.password }\n\t).on(\"complete\", function onComplete(results) {\n\t\tfuture.fulfill(results);\n\t});\n\n\treturn future;\n};\n\nRallyConnection.prototype.find = function find(opts) {\n\tvar q = {\n\t\tstart: opts.start || 1,\n\t\tpagesize: opts.count || 200\n\t};\n\n\tvar future = Future.create(this);\n\n\tif (typeof opts.query === \"string\") {\n\t\tq.query = opts.query;\n\t}\n\n\tif (typeof opts.fetch === \"string\") {\n\t\tq.fetch = opts.fetch;\n\t}\n\n\trestler.get(\n\t\tthis._generateURL({type: opts.type, query: q}), \n\t\t{ username: this.opts.username, password: this.opts.password }\n\t).on(\"complete\", function findComplete(results) {\n\t\tfuture.fulfill(JSON.parse(results));\n\t});\n\n\treturn future;\n};\n\nRallyConnection.prototype.findAll = function findAll(opts) {\n\tvar future = Future.create(this);\n\tvar me = this;\n\tvar totalProcessed = 0;\n\tvar allResults = {\n\t\tQueryResult: {\n\t\t\tResults: [],\n\t\t\tErrors: [],\n\t\t\tWarnings: []\n\t\t}\n\t};\n\n\topts.pagesize = opts.pagesize || 200;\n\topts.start = opts.start || 1 - opts.pagesize;\n\n\tvar processNext = function processNext(opts) {\n\t\topts.start += opts.pagesize;\n\n\t\tme.find(opts).when(function processResults(results) {\n\t\t\tallResults.QueryResult.Results =\n\t\t\t\tallResults.QueryResult.Results.concat(results.QueryResult.Results);\n\t\t\tallResults.QueryResult.Errors =\n\t\t\t\tallResults.QueryResult.Errors.concat(results.QueryResult.Errors);\n\t\t\tallResults.QueryResult.Warnings =\n\t\t\t\tallResults.QueryResult.Warnings.concat(results.QueryResult.Warnings);\n\n\t\t\ttotalProcessed = allResults.QueryResult.Results.length;\n\n\t\t\tif (totalProcessed < results.QueryResult.TotalResultCount) {\n\t\t\t\tprocessNext(opts);\n\t\t\t} else {\n\t\t\t\tfuture.fulfill(allResults);\n\t\t\t}\n\t\t});\n\t};\n\n\tprocessNext(opts);\n\n\treturn future;\n}\n\nRallyConnection.prototype.update = function update(ref, obj) {\n\tvar future = Future.create(this);\n\n\trestler\n\t\t.post(ref, {\n\t\t\tusername: this.opts.username, \n\t\t\tpassword: this.opts.password,\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tdata: JSON.stringify(obj)\n\t\t})\n\t\t.on(\"complete\", function updateComplete(results) {\n\t\t\tfuture.fulfill(JSON.parse(results));\n\t\t});\n\n\treturn future;\n};\n\nmodule.exports.RallyConnection = RallyConnection;\nmodule.exports.Types = Types;\n"]],"start1":0,"start2":0,"length1":0,"length2":3678}]],"length":3678,"saved":false}
